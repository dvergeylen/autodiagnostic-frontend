# AUTODIAGNOSTIC FRONTEND AND BACKEND
server {
  listen 80;
  listen [::]:80;
  server_name ge.wallonie-entreprendre.be ge.sowalfin.be;

  # Autodiagnostic Stats Server API
  # (Rails --api backend server)
  location /autodiagnostic/stats/api/ {
    access_log off;
    proxy_pass http://stats-backend/;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Autodiagnostic Stats Server GUI
  location /autodiagnostic/stats/ui {
    alias /usr/src/apps/autodiagnostic-stats-frontend/;
    index index.html;
    try_files $uri $uri/ =404;
  }

#  # Autodiagnostic Stats Server GUI
#  location /autodiagnostic/stats/ui {
#    root /usr/src/apps/autodiagnostic-stats-frontend/;
#    index index.html;
#  }
#
  # Autodiagnostic Frontend Application (Chat app)
  location /autodiagnostic {
    alias /usr/src/apps/autodiagnostic-frontend/;
    index index.html;
    try_files $uri $uri/ =404;
  }

  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}

# BADGEE
server {
  listen 80;
  listen [::]:80;
  server_name www.badgee.net badgee.net;

  client_max_body_size 10m;

  location / {
    access_log off;
    proxy_pass http://badgee:80;
    proxy_set_header X-Real-IP $remote_addr;

    # Will hopefully fix InvalidAuthenticityToken
    # from any form because of
    # vendor/bundle/ruby/3.2.0/gems/actionpack-7.0.5/lib/action_controller/metal/request_forgery_protection.rb
    # (request.origin == request.base_url which are comparing https and http url)
    # See: https://github.com/rails/rails/issues/22965
    proxy_set_header  Host $host;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  X-Forwarded-Ssl on; # Optional
    proxy_set_header  X-Forwarded-Port $server_port;
    proxy_set_header  X-Forwarded-Host $host;
  }
}
